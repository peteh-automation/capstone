
version: 2.1

orbs:
  aws-eks: circleci/aws-eks@1.0.3
  kubernetes: circleci/kubernetes@0.11.2

executors:
  docker-publisher:
    environment:
      IMAGE_NAME: peterheybrock/capstone
    docker:
      - image: circleci/buildpack-deps:stretch

jobs:
  test-code:
    docker:
      - image: python:3.7.3-stretch

    working_directory: ~/work

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "README.md" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "README.md" }}

      # run lint!
      - run:
          name: run lint
          command: |
            . venv/bin/activate
            make lint

  build-image:
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: docker build -t $IMAGE_NAME:latest .
      - run:
          name: Archive Docker image
          command: docker save -o image.tar $IMAGE_NAME
      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar

  publish-image:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - checkout
      - setup_remote_docker
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKER_PASS" | docker login --username $DOCKER_USER --password-stdin
            docker push $IMAGE_NAME:latest

  deploy-image:
      executor: aws-eks/python3
      parameters:
        cluster-name:
          description: 
            Name of the EKS cluster
          type: string
        cluster-authentication-role-arn:
          description:
            IAM Role ARN
          type: string
      steps:
        - kubernetes/install
        - aws-eks/update-kubeconfig-with-authenticator:
            cluster-name: << parameters.cluster-name >>
            cluster-authentication-role-arn: << parameters.cluster-authentication-role-arn >>
        - run:
            command: aws sts get-caller-identity
            name: Who am I
        - run:
            command: kubectl get services
            name: Test cluster

workflows:
  myworkflow:
    jobs:
      - test-code
      - build-image:
          requires:
            - test-code
      - publish-image:
          requires:
            - build-image
      - test-cluster:
          cluster-name: capstone-eksctl
          cluster-authentication-role-arn: arn:aws:iam::509331676020:role/capstone-admin
          requires:
            - publish-image
      - aws-eks/update-container-image:
          cluster-name: capstone-eksctl
          container-image-updates: capstone=peterheybrock/capstone:latest
          record: true
          show-kubectl-command: true
          requires:
            - test-cluster
